# coding: utf-8

"""
    Phrase Strings API Reference

    The version of the OpenAPI document: 2.0.0
    Contact: support@phrase.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from phrase_api.configuration import Configuration


class LocaleDownload(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'status': 'str',
        'result': 'LocaleDownloadResult',
        'params': 'LocaleDownloadParams',
        'error': 'str',
        'created_at': 'datetime',
        'completed_at': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'status': 'status',
        'result': 'result',
        'params': 'params',
        'error': 'error',
        'created_at': 'created_at',
        'completed_at': 'completed_at'
    }

    def __init__(self, id=None, status=None, result=None, params=None, error=None, created_at=None, completed_at=None, local_vars_configuration=None):  # noqa: E501
        """LocaleDownload - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._status = None
        self._result = None
        self._params = None
        self._error = None
        self._created_at = None
        self._completed_at = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if status is not None:
            self.status = status
        if result is not None:
            self.result = result
        if params is not None:
            self.params = params
        if error is not None:
            self.error = error
        if created_at is not None:
            self.created_at = created_at
        if completed_at is not None:
            self.completed_at = completed_at

    @property
    def id(self):
        """Gets the id of this LocaleDownload.  # noqa: E501


        :return: The id of this LocaleDownload.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LocaleDownload.


        :param id: The id of this LocaleDownload.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this LocaleDownload.  # noqa: E501

        The status of the download request. Possible values are `processing`, `completed`, and `error`.   # noqa: E501

        :return: The status of this LocaleDownload.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LocaleDownload.

        The status of the download request. Possible values are `processing`, `completed`, and `error`.   # noqa: E501

        :param status: The status of this LocaleDownload.  # noqa: E501
        :type: str
        """
        allowed_values = ["processing", "completed", "error"]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and status not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"  # noqa: E501
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def result(self):
        """Gets the result of this LocaleDownload.  # noqa: E501


        :return: The result of this LocaleDownload.  # noqa: E501
        :rtype: LocaleDownloadResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this LocaleDownload.


        :param result: The result of this LocaleDownload.  # noqa: E501
        :type: LocaleDownloadResult
        """

        self._result = result

    @property
    def params(self):
        """Gets the params of this LocaleDownload.  # noqa: E501


        :return: The params of this LocaleDownload.  # noqa: E501
        :rtype: LocaleDownloadParams
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this LocaleDownload.


        :param params: The params of this LocaleDownload.  # noqa: E501
        :type: LocaleDownloadParams
        """

        self._params = params

    @property
    def error(self):
        """Gets the error of this LocaleDownload.  # noqa: E501


        :return: The error of this LocaleDownload.  # noqa: E501
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this LocaleDownload.


        :param error: The error of this LocaleDownload.  # noqa: E501
        :type: str
        """

        self._error = error

    @property
    def created_at(self):
        """Gets the created_at of this LocaleDownload.  # noqa: E501


        :return: The created_at of this LocaleDownload.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this LocaleDownload.


        :param created_at: The created_at of this LocaleDownload.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def completed_at(self):
        """Gets the completed_at of this LocaleDownload.  # noqa: E501


        :return: The completed_at of this LocaleDownload.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at):
        """Sets the completed_at of this LocaleDownload.


        :param completed_at: The completed_at of this LocaleDownload.  # noqa: E501
        :type: datetime
        """

        self._completed_at = completed_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LocaleDownload):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LocaleDownload):
            return True

        return self.to_dict() != other.to_dict()
