# coding: utf-8

"""
    Phrase Strings API Reference

    The version of the OpenAPI document: 2.0.0
    Contact: support@phrase.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import phrase_api
from phrase_api.models.automations_create_parameters1 import AutomationsCreateParameters1  # noqa: E501
from phrase_api.rest import ApiException

class TestAutomationsCreateParameters1(unittest.TestCase):
    """AutomationsCreateParameters1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AutomationsCreateParameters1
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = phrase_api.models.automations_create_parameters1.AutomationsCreateParameters1()  # noqa: E501

        """
        if include_optional :
            return AutomationsCreateParameters1(
                name = 'Scheduled Job Automation - Hourly', 
                trigger = 'schedule', 
                project_ids = ["abcd1234cdef1234abcd1234cdef1234"], 
                job_template_id = 'abcd1234cdef1234abcd1234cdef1234', 
                status_filters = [
                    'unverified'
                    ], 
                tags = ["myTag"], 
                cron_schedule = '00 13 * * 1,2', 
                time_zone = 'GMT'
            )
        else :
            return AutomationsCreateParameters1(
                name = 'Scheduled Job Automation - Hourly',
                trigger = 'schedule',
                project_ids = ["abcd1234cdef1234abcd1234cdef1234"],
                status_filters = [
                    'unverified'
                    ],
        )
        """

    def testAutomationsCreateParameters1(self):
        """Test AutomationsCreateParameters1"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
